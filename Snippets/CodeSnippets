//Defining a variable
//No need to specify data type. Variable stores the address of the value. Not the actual value.

v1 = 5

//Print the value of a variable to the console

print(v1)

//Operators in Python

The AND operator: and
The OR operator: or

- + / * %

//Division and the result depend on how many slashes you use.

56/5 = 1.2
56//5 = 1

//Printing to console

print("Hello")

//Prints out value of variables plus a string you can add
print(total, "gets added to",num)

//Adding a value to a variable plus itself

a = 5

a+=10 is the same as a = a + 10

//Comments in Python
//Use the # symbol for comments

#THis is a comments and stuff

//Code blocks
//In Python, code blocks begin with a color and are followed by indentation.
//The code block ends when the indendation is reversed. USE INDEDATION CAREFULLY!!!!!!!!!!!!!
//You do not use {} for code blocks in Python indentation is used instead

num = 1234

if(num < 10):
  print("Hello") 

print("Outside code block")

//If-else-then
//The indentation determines when if ends and where else starts

if(False):
  print("Hello")

else:
  print("not Hello")

print("outside of Code")

//USE THE elif INSTEAD OF ELSE IF!!!!!!!!!!!!!

if(num>0):
  print("45")
  print("65")

elif(num<0):
    
  print("-45")
  print("-65 ")
  
elif(num==0):
    print("ZERO")


//Or And operators
//Use the word (or) and the word (and) instead of && ||

if(num>0 or num==0):
  print("45")
  print("65")

elif(:
  print("-45")
  print("-65 ")

//While loop
//Similar to java. Just remember the indetation stuff

num = 5;

while (num > 0):
    print(num)
    num = num-1
    
//Methods
//Use the def keyword in order to define a method in Python. They are not read unless they are directly called

def calculate_sum(data1, data2):
    
    result_sum=data1+data2
    return result_sum

result=calculate_sum(10,20)
print(result)
    

//Multiline string
//THis string includes the newline values meaning that if you print it, it will have skip lines 

a = '''Gekki
asdfasd
asdfasdf
asdfasdfdaf'''

print(a)

//Get input from the user!!!

name=input("Enter your name:")
print(name)

//Convert input from String to integer
//Input received from input function is String by default

number = input("Enter a number:")
number = int(number)
print(number)

//Creating a while loop

while(a>b):
  #someCode

//Creating a for loop
//range is a function

#For loop using tuple
#Tuple: fixed sized list/array that is immutable

total = 0

for myNum in 4,5,6,7,8,9,10,11,12:
    total = total + myNum


print(total)

#For loop using range
#range(Starting point, ending point(no included), step)

total = 0

for myNum in range(4,13,1):
    total = total + myNum


print(total)

#For loop using range without step
#Step by default is 1

total = 0

for myNum in range(4,13):
    total = total + myNum

print(total)

//Break and continue
//"break" and "continue" stay the same as in Java

//Lists
//Lists are similar to arrays in java. 
//They are generally of a fixed size.
//Can hold items of different types

marks = [1,2,3,4]

print(marks[0])

//Adding elements to array

marks = []

marks.append(5)

print(marks[0])

//Creating an empty list of a fixed size

marks = [None]*5

print(marks[0])

//Getting the length of a list

marks = [None]*7

print(len(marks))

//Combining two lists together

sample_list = [1,2,3]

new_list = [4,5,6]

##sample_list+=new_list

sample_list = sample_list+new_list

print(sample_list)

OROROROROROROROOROROROROROROROR

sample_list = [1,2,3]

new_list = [4,5,6]

sample_list+=new_list

print(sample_list)

//Iterating through a list

list_of_airlines=["AI","EM","BA"]

#Normal iteration through a list
print("Iterating the list using range()")
for index in range(0,len(list_of_airlines)):
    print(list_of_airlines[index])

#Advanced for loop iteration
print("Iterating the list using keyword in")
for airline in list_of_airlines:
    print(airline)

//If else loop exclusive to Python
//Will iterate through the list as if it were a loop
//If the condition is met then the code will be done once and then break
//If condition was not ever met then the ELSE will be performed

list_of_airlines=["AI","EM","BA"]

airline="AI"
if airline in list_of_airlines:
    print("Airline found")
else:
    print("Airline not found")

#Output would be "Airline found"

//Slicing lists


a = [1,2,3,4,5]

#returns [1,2]
print(a[0:2])

#Continues until the end of the list
print(a[0:])

#Changes the increment to 2, thus skipping an element each time
print(a[0::2])

#Returns list starting from last element until first element
print(a[5::-1])

print(a[4::-2]) 

//Strings in Python
//String are very similar to arrays and list

a = "Stuff and things"

print(a[0]) #Prints out "S"

//Combining strings
//There is no append method in strings so just add them together through "+"

a = "things"

b = " stuff"

a = a + b

print(a) #things and stuff

//Finding characters and substring
//Use the find() method. Return 1 if found and -1 if not found

a = " stuff"

if(a.find("tu")):
    print("found it")#Will print out
 
//Dictionaries in Python
//Dictionaries are similar to HashMaps, they consist of a key and a value

myDictionary = {"name":"Steve", "ssn":190}

#Prints out {'name': 'Steve', 'ssn': 190}
print(myDictionary)

//Transversing a dictionary

myDictionary["ssn"] #returns 190

//Changing values using keys

myDictionary["ssn"] = 200

//You are able to check the key of the items in the dictionary
//The variable "word" is compared to the key of the dictionary
//And whether the word is even a key in the dictionary or not
for word in english_words_list:
        
        if(word in bilingual_dict):
            
            swedish_words_list.append(bilingual_dict[word])
            
 
